plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.2'
	id "org.openapi.generator" version "${openapiGeneratorVersion}"
}
group = 'pl.mm'
version = '1.0'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity6', version: '3.1.1.RELEASE'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-security'


	implementation 'org.flywaydb:flyway-core'
    testImplementation 'org.testng:testng:7.1.0'
    runtimeOnly 'org.postgresql:postgresql'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"


	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocOpenApiVersion}"


	implementation "org.openapitools:jackson-databind-nullable:${jacksonDatabindNullableVersion}"
	implementation "javax.annotation:javax.annotation-api:${javaxAnnotationApiVersion}"
	implementation "io.swagger:swagger-annotations:${swaggerAnnotationsVersion}"


	implementation "com.google.code.findbugs:jsr305:${jsr305Version}"

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'

	testImplementation "org.slf4j:slf4j-api:${wiremockSlf4jVersion}"
	testImplementation "com.github.tomakehurst:wiremock-standalone:${wiremockVersion}"
	testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}


openApiGenerate {
	generatorName = "java"
	library = "webclient"
	configOptions = [
			serializableModel   : "true",
			dateLibrary         : "java8",
			serializationLibrary: "jackson"
	]
	outputDir = "$buildDir/generated-sources/openapi".toString()
	inputSpec = "$rootDir/src/main/resources/contracts/postalCodes.yaml".toString()
	apiPackage = "pl.mm.foodemo.infrastructure.postalCodes.api"
	modelPackage = "pl.mm.foodemo.infrastructure.postalCodes.model"
}

bootJar {
	archiveFileName = "foodemo.${archiveExtension.get()}"
}

sourceSets {
	main {
		java.srcDirs += "$buildDir/generated-sources/openapi/src/main/java"
	}
}
compileJava.dependsOn tasks.openApiGenerate

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}
